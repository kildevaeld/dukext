exports.EventEmitter=function(){function callFunc(fn,args){void 0===args&&(args=[]);var l=fn.length,i=-1,a1=args[0],a2=args[1],a3=args[2],a4=args[3];switch(args.length){case 0:for(;++i<l;)fn[i].handler.call(fn[i].ctx);return;case 1:for(;++i<l;)fn[i].handler.call(fn[i].ctx,a1);return;case 2:for(;++i<l;)fn[i].handler.call(fn[i].ctx,a1,a2);return;case 3:for(;++i<l;)fn[i].handler.call(fn[i].ctx,a1,a2,a3);return;case 4:for(;++i<l;)fn[i].handler.call(fn[i].ctx,a1,a2,a3,a4);return;default:for(;++i<l;)fn[i].handler.apply(fn[i].ctx,args);return}}function removeFromListener(listeners,fn,ctx){for(var i=0;i<listeners.length;i++){var e=listeners[i];(null==fn&&null!=ctx&&e.ctx===ctx||null!=fn&&null==ctx&&e.handler===fn||null!=fn&&null!=ctx&&e.handler===fn&&e.ctx===ctx)&&listeners.splice(i,1)}return listeners}function EventEmitter(){}function check(e,l){return(e._listeners||(e._listeners={}))[l]||(e._listeners[l]=[])}var p=EventEmitter.prototype;Array.prototype.slice;return p.on=function(event,callback,ctx,once){return check(this,event).push({name:event,handler:callback,ctx:ctx||this,once:void 0!=once&&once}),this},p.once=function(event,callback,ctx){return this.on(event,callback,ctx,!0)},p.off=function(eventName,fn,ctx){if(this._listeners=this._listeners||{},null==eventName&&null==ctx)this._listeners={};else if(this._listeners[eventName]){var events=this._listeners[eventName];null==fn&&null==ctx?this._listeners[eventName]=[]:removeFromListener(events,fn,ctx)}else for(var en in this.listeners)removeFromListener(this.listeners[en],fn,ctx);return this},p.emit=function(eventName){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];this._listeners=this._listeners||{};for(var index,events=(this._listeners[eventName]||[]).concat(this._listeners["*"]||[]),calls=[],alls=[],i=0,ii=events.length;i<ii;i++)events[i],args,"all"==events[i].name||"*"==events[i].name?alls.push(events[i]):calls.push(events[i]),!0===events[i].once&&(index=this._listeners[events[i].name].indexOf(events[i]),this._listeners[events[i].name].splice(index,1));return alls.length&&callFunc(alls,[eventName].concat(args)),calls.length&&callFunc(calls,args),this},EventEmitter}();
